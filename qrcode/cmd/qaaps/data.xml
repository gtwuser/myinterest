<ul class="list-box"><li class="watched on"><a href="/video/BV1M7411o76X?p=1" class="" title="01Open a class, understand go-kit, build the first http service (part 1)"><i class="van-icon-videodetails_play"></i><span class="s1"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">P1</font></font></span><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
    01 Open class, understand go-kit, build the first http service (part 1)
</font></font></a></li><li class=""><a href="/video/BV1M7411o76X?p=2" class="" title="02Build the first http service (below) three-tier architecture, local service operation"><i class="van-icon-videodetails_play" style="display: none;"></i><span class="s1"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">P2</font></font></span><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
    02 Build the first http service (below) three-tier architecture, local service operation
</font></font></a></li><li class=""><a href="/video/BV1M7411o76X?p=3" class="" title="03 Service registration (1) The basic method of using go to register services with Consul"><i class="van-icon-videodetails_play" style="display: none;"></i><span class="s1"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">P3</font></font></span><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
    03 Service Registration (1) The basic method of using go to register services with Consul
</font></font></a></li><li class=""><a href="/video/BV1M7411o76X?p=4" class="" title="04Build the first http service (below) three-tier architecture, local service operation"><i class="van-icon-videodetails_play" style="display: none;"></i><span class="s1"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">P4</font></font></span><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
    04 Build the first http service (below) three-tier architecture, local service operation
</font></font></a></li><li class=""><a href="/video/BV1M7411o76X?p=5" class="" title="05 Simple deployment of single-node Consul, Jianxue API, manual registration and deletion services"><i class="van-icon-videodetails_play" style="display: none;"></i><span class="s1"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">P5</font></font></span><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
    05 Simple deployment of single node Consul, Jianxue API, manual registration and deletion services
</font></font></a></li><li class=""><a href="/video/BV1M7411o76X?p=6" class="" title="06 Service registration (1) The basic method of using go to register services with Consul"><i class="van-icon-videodetails_play" style="display: none;"></i><span class="s1"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">P6</font></font></span><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
    06 Service Registration (1) The basic method of using go to register services with Consul
</font></font></a></li><li class=""><a href="/video/BV1M7411o76X?p=7" class="" title="The basic method to deregister the service with Consul when Go exits, and gracefully close the service"><i class="van-icon-videodetails_play" style="display: none;"></i><span class="s1"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">P7</font></font></span><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
    07 Basic method of de-registering service with Consul when Go exits, gracefully shutting down
</font></font></a></li><li class=""><a href="/video/BV1M7411o76X?p=8" class="" title="08 Service discovery (1) The client directly calls the service (direct connection method)"><i class="van-icon-videodetails_play" style="display: none;"></i><span class="s1"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">P8</font></font></span><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
    08 Service Discovery (1) The client directly calls the service (direct connection method)
</font></font></a></li><li class=""><a href="/video/BV1M7411o76X?p=9" class="" title="09 Service discovery (2) Obtain service instances and call tests through consul"><i class="van-icon-videodetails_play" style="display: none;"></i><span class="s1"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">P9</font></font></span><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
    09 Service Discovery (2) Obtain service instances and call tests through consul
</font></font></a></li><li class=""><a href="/video/BV1M7411o76X?p=10" class="" title="10 Supplementary hours to register multiple services based on command line parameters"><i class="van-icon-videodetails_play" style="display: none;"></i><span class="s1"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">P10</font></font></span><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
    10 Supplementary Lessons Register multiple services based on command line parameters
</font></font></a></li><li class=""><a href="/video/BV1M7411o76X?p=11" class="" title="11Use load balancing to call the service (polling method)"><i class="van-icon-videodetails_play" style="display: none;"></i><span class="s1"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">P11</font></font></span><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
    11 uses load balancing to call services (polling method)
</font></font></a></li><li class=""><a href="/video/BV1M7411o76X?p=12" class="" title="12Use load balancing to call the service (random method)"><i class="van-icon-videodetails_play" style="display: none;"></i><span class="s1"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">P12</font></font></span><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
    12 uses load balancing to call services (random method)
</font></font></a></li><li class=""><a href="/video/BV1M7411o76X?p=13" class="" title="13API current limit (1) Go built-in rate package learning (on)-Wait, WaitN"><i class="van-icon-videodetails_play" style="display: none;"></i><span class="s1"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">P13</font></font></span><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
    13API current limit (1) Go built-in rate package learning (on)-Wait, WaitN
</font></font></a></li><li class=""><a href="/video/BV1M7411o76X?p=14" class="" title="14 API current limit (2) Go built-in rate package learning (Part 2)-AllowN, http server test"><i class="van-icon-videodetails_play" style="display: none;"></i><span class="s1"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">P14</font></font></span><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
    14API current limit (2) Go built-in rate package learning (below)-AllowN, http server test
</font></font></a></li><li class=""><a href="/video/BV1M7411o76X?p=15" class="" title="15 API current limit (3) integrate current limit function into our service"><i class="van-icon-videodetails_play" style="display: none;"></i><span class="s1"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">P15</font></font></span><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
    15API current limit (3) Integrate current limit function into our service
</font></font></a></li><li class=""><a href="/video/BV1M7411o76X?p=16" class="" title="16 Unified Exception Handling (Part 1) Writing custom handling functions"><i class="van-icon-videodetails_play" style="display: none;"></i><span class="s1"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">P16</font></font></span><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
    16 unified exception handling (on) writing custom processing functions
</font></font></a></li><li class=""><a href="/video/BV1M7411o76X?p=17" class="" title="17 unified exception handling set your own Error object"><i class="van-icon-videodetails_play" style="display: none;"></i><span class="s1"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">P17</font></font></span><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
    17 unified exception handling sets up its own Error object
</font></font></a></li><li class=""><a href="/video/BV1M7411o76X?p=18" class="" title="18 Service fault tolerance, fuse learning (1) Getting started, basic operation"><i class="van-icon-videodetails_play" style="display: none;"></i><span class="s1"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">P18</font></font></span><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
    18 Service fault tolerance, fuse learning (1) Getting started, basic operation
</font></font></a></li><li class=""><a href="/video/BV1M7411o76X?p=19" class="" title="19 Fuse learning (2) Configure command, timeout error report, set maximum timeout time"><i class="van-icon-videodetails_play" style="display: none;"></i><span class="s1"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">P19</font></font></span><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
    19 Fuse Learning (2) Configure command, timeout error report, set maximum timeout time
</font></font></a></li><li class=""><a href="/video/BV1M7411o76X?p=20" class="" title="20 Fuse learning (3) How to write service degradation under timeout"><i class="van-icon-videodetails_play" style="display: none;"></i><span class="s1"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">P20</font></font></span><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
    20 fuse learning (3) How to write service degradation under timeout
</font></font></a></li><li class=""><a href="/video/BV1M7411o76X?p=21" class="" title="21 Fuse learning (4) Asynchronous execution and service degradation"><i class="van-icon-videodetails_play" style="display: none;"></i><span class="s1"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">P21</font></font></span><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
    21 Fuse Learning (4) Asynchronous execution and service degradation
</font></font></a></li><li class=""><a href="/video/BV1M7411o76X?p=22" class="" title="22 Fuse learning (5) Control the maximum number of concurrent"><i class="van-icon-videodetails_play" style="display: none;"></i><span class="s1"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">P22</font></font></span><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
    22 fuse learning (5) control the maximum number of concurrent
</font></font></a></li><li class=""><a href="/video/BV1M7411o76X?p=23" class="" title="23 Fuse learning (6) Fuse opening and parameter setting"><i class="van-icon-videodetails_play" style="display: none;"></i><span class="s1"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">P23</font></font></span><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
    23 Fuse learning (6) Fuse opening and parameter setting
</font></font></a></li><li class=""><a href="/video/BV1M7411o76X?p=24" class="" title="24 Fuse learning (7) Three states and state acquisition of fuse"><i class="van-icon-videodetails_play" style="display: none;"></i><span class="s1"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">P24</font></font></span><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
    24 Fuse learning (7) Three states and state acquisition of fuse
</font></font></a></li><li class=""><a href="/video/BV1M7411o76X?p=25" class="" title="25 Fuse learn to integrate the fuse into our client code (preliminary)"><i class="van-icon-videodetails_play" style="display: none;"></i><span class="s1"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">P25</font></font></span><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
    25 fuse learn to integrate the fuse into our client code (preliminary)
</font></font></a></li><li class=""><a href="/video/BV1M7411o76X?p=26" class="" title="26 log (1) The most basic log output method, the use of built-in log package"><i class="van-icon-videodetails_play" style="display: none;"></i><span class="s1"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">P26</font></font></span><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
    26 log (1) The most basic log output method, the use of built-in log package
</font></font></a></li><li class=""><a href="/video/BV1M7411o76X?p=27" class="" title="27 log (2) Use middleware to package log output"><i class="van-icon-videodetails_play" style="display: none;"></i><span class="s1"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">P27</font></font></span><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
    27 log (2) Use middleware to package log output
</font></font></a></li><li class=""><a href="/video/BV1M7411o76X?p=28" class="" title="28Jwt integration (1) Basic generation and verification using third-party libraries and tokens"><i class="van-icon-videodetails_play" style="display: none;"></i><span class="s1"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">P28</font></font></span><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
    28Jwt integration (1) Use third-party libraries, basic token generation and verification
</font></font></a></li><li class=""><a href="/video/BV1M7411o76X?p=29" class="" title="29Jwt integration (2) Generating public and private keys, generating and parsing tokens for asymmetric encryption"><i class="van-icon-videodetails_play" style="display: none;"></i><span class="s1"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">P29</font></font></span><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
    29Jwt integration (2) Generate public and private keys, generate asymmetric encryption, and analyze tokens
</font></font></a></li><li class=""><a href="/video/BV1M7411o76X?p=30" class="" title="30Jwt integration (3) token setting expiration time, abnormal judgment"><i class="van-icon-videodetails_play" style="display: none;"></i><span class="s1"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">P30</font></font></span><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
    30Jwt integration (3) Token setting expiration time, abnormal judgment
</font></font></a></li><li class=""><a href="/video/BV1M7411o76X?p=31" class="" title="31Jwt integration (4) Integrate token authentication and user information transmission by requesting tokenAPI and middleware"><i class="van-icon-videodetails_play" style="display: none;"></i><span class="s1"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">P31</font></font></span><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
    31Jwt integration (4) Integrate token authentication and user information transmission by requesting tokenAPI and middleware
</font></font></a></li></ul>